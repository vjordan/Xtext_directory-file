/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.dirFile.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.dirFile.DirFileFactory;
import org.xtext.example.dirFile.DirFilePackage;
import org.xtext.example.dirFile.Directory;
import org.xtext.example.dirFile.File;
import org.xtext.example.dirFile.FirstDirectory;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DirFilePackageImpl extends EPackageImpl implements DirFilePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directoryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typE_DIR_FILEEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass firstDirectoryEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.dirFile.DirFilePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DirFilePackageImpl()
  {
    super(eNS_URI, DirFileFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DirFilePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DirFilePackage init()
  {
    if (isInited) return (DirFilePackage)EPackage.Registry.INSTANCE.getEPackage(DirFilePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDirFilePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DirFilePackageImpl theDirFilePackage = registeredDirFilePackage instanceof DirFilePackageImpl ? (DirFilePackageImpl)registeredDirFilePackage : new DirFilePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDirFilePackage.createPackageContents();

    // Initialize created meta-data
    theDirFilePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDirFilePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DirFilePackage.eNS_URI, theDirFilePackage);
    return theDirFilePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDirectory()
  {
    return directoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDirectory_Tree()
  {
    return (EReference)directoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFile()
  {
    return fileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTYPE_DIR_FILE()
  {
    return typE_DIR_FILEEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTYPE_DIR_FILE_Name()
  {
    return (EAttribute)typE_DIR_FILEEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFirstDirectory()
  {
    return firstDirectoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFirstDirectory_FirstDirectory()
  {
    return (EReference)firstDirectoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DirFileFactory getDirFileFactory()
  {
    return (DirFileFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    directoryEClass = createEClass(DIRECTORY);
    createEReference(directoryEClass, DIRECTORY__TREE);

    fileEClass = createEClass(FILE);

    typE_DIR_FILEEClass = createEClass(TYPE_DIR_FILE);
    createEAttribute(typE_DIR_FILEEClass, TYPE_DIR_FILE__NAME);

    firstDirectoryEClass = createEClass(FIRST_DIRECTORY);
    createEReference(firstDirectoryEClass, FIRST_DIRECTORY__FIRST_DIRECTORY);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    directoryEClass.getESuperTypes().add(this.getTYPE_DIR_FILE());
    fileEClass.getESuperTypes().add(this.getTYPE_DIR_FILE());

    // Initialize classes and features; add operations and parameters
    initEClass(directoryEClass, Directory.class, "Directory", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDirectory_Tree(), this.getTYPE_DIR_FILE(), null, "tree", null, 0, -1, Directory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fileEClass, File.class, "File", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(typE_DIR_FILEEClass, org.xtext.example.dirFile.TYPE_DIR_FILE.class, "TYPE_DIR_FILE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTYPE_DIR_FILE_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.xtext.example.dirFile.TYPE_DIR_FILE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(firstDirectoryEClass, FirstDirectory.class, "FirstDirectory", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFirstDirectory_FirstDirectory(), this.getDirectory(), null, "firstDirectory", null, 0, 1, FirstDirectory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DirFilePackageImpl
